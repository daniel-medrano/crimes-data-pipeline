-- AWS S3 Integration in Snowflake

CREATE STORAGE INTEGRATION RAW.S3_INTEGRATION
    TYPE = EXTERNAL_STAGE
    STORAGE_PROVIDER = 'S3'
    ENABLED = TRUE
    STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::344654587847:role/SnowflakeRoleForS3Access'
    STORAGE_ALLOWED_LOCATIONS = ('s3://data-challenge-ulacit-2023/', 's3://data-challenge-ulacit-2023/crimes-dataset/');

DESCRIBE INTEGRATION S3_INTEGRATION;

-- External Stage for S3 Bucket

CREATE STAGE RAW.CRIMES_DATASET_STAGE
    URL = 's3://data-challenge-ulacit-2023/crimes-dataset'
    STORAGE_INTEGRATION = S3_INTEGRATION;

-- Pipe with Auto-Ingest Enabled
CREATE PIPE RAW.CRIMES_DATASET_PIPE
    AUTO_INGEST = TRUE
AS COPY INTO RAW.CRIMES
    FROM (SELECT 
        $1 AS CATEGORY, 
        $2 AS MODALITY, 
        $3 AS DATE, 
        $4 AS TARGET_TYPE, 
        $5 AS TARGET_DESCRIPTION, 
        $6 AS AGE_CATEGORY, 
        $8 AS NATIONALITY, 
        $9 AS PROVINCE, 
        $10 AS CANTON, 
        $11 AS DISTRICT, 
        $12 AS MISMATCH
    FROM @RAW.CRIMES_DATASET_STAGE)
FILE_FORMAT = (TYPE = CSV);


CREATE OR REPLACE STREAM RAW.CRIMES_STREAM ON TABLE RAW.CRIMES APPEND_ONLY = TRUE;

-- Make sure your role has the EXECUTE TASK privilege.
GRANT EXECUTE TASK ON ACCOUNT TO ROLE SYSADMIN;

-- Task in charge of tranforming the data from RAW.CRIMES and inserting it to TRANSFORMED.CRIMES.
CREATE OR REPLACE TASK TRANSFORMED.UPDATE_CRIMES
    WAREHOUSE = 'COMPUTE_WH'
    SCHEDULE = '1 MINUTE'
WHEN SYSTEM$STREAM_HAS_DATA('CRIMES_DC23.RAW.CRIMES_STREAM')
AS INSERT INTO TRANSFORMED.CRIMES SELECT 
    COL1 AS CRIME_CATEGORY, 
    COL2 AS CRIME_MODALITY, 
    to_date(COL3) AS CRIME_DATE,
    COL4 AS TARGET_TYPE, 
    left(COL5, charindex('[', COL5) - 1) AS TARGET_DESCRIPTION, 
    trim(upper(COL6)) AS VICTIM_AGE_CATEGORY,
    upper(COL7) AS VICTIM_NATIONALITY, 
    COL8 AS CRIME_PROVINCE, 
    COL9 AS CRIME_CANTON, 
    COL10 AS CRIME_DISTRICT 
FROM RAW.CRIMES_STREAM
WHERE COL11 IS NULL
UNION ALL
SELECT 
    COL1 AS CRIME_CATEGORY, 
    COL2 AS CRIME_MODALITY, 
    to_date(COL3) AS CRIME_DATE,
    COL4 AS TARGET_TYPE, 
    left(COL5, charindex('[', COL5) - 1) AS TARGET_DESCRIPTION, 
    trim(upper(COL6)) AS VICTIM_AGE_CATEGORY,
    concat(COL8,' ',COL7) AS VICTIM_NATIONALITY, 
    COL9 AS CRIME_PROVINCE, 
    COL10 AS CRIME_CANTON, 
    COL11 AS CRIME_DISTRICT 
FROM RAW.CRIMES_STREAM
WHERE COL11 IS NOT NULL;

ALTER TASK TRANSFORMED.UPDATE_CRIMES RESUME;
-- ALTER TASK TRANSFORMED.UPDATE_CRIMES SUSPEND;


CREATE OR REPLACE STREAM TRANSFORMED.CRIMES_STREAM ON TABLE TRANSFORMED.CRIMES APPEND_ONLY = TRUE;


CREATE OR REPLACE TASK CONSUMPTION.CREATE_TEMPORARY_TABLE
    WAREHOUSE = 'COMPUTE_WH'
    SCHEDULE = '1 MINUTE'
WHEN SYSTEM$STREAM_HAS_DATA('CRIMES_DC23.TRANSFORMED.CRIMES_STREAM')
AS CREATE TABLE CRIMES_DC23.TRANSFORMED.CRIMES_TEMPORARY AS
SELECT * FROM CRIMES_DC23.TRANSFORMED.CRIMES_STREAM;

CREATE OR REPLACE TASK CONSUMPTION.UPDATE_MODALITY_DIMENSION
    WAREHOUSE = 'COMPUTE_WH'
AFTER CONSUMPTION.CREATE_TEMPORARY_TABLE
AS MERGE INTO CONSUMPTION.MODALITY_DIMENSION AS CMD
    USING (
        SELECT DISTINCT CRIME_MODALITY, CRIME_CATEGORY 
        FROM TRANSFORMED.CRIMES_TEMPORARY
        ORDER BY CRIME_CATEGORY, CRIME_MODALITY
    ) AS TCT 
    ON CMD.MODALITY = TCT.CRIME_MODALITY
    AND CMD.CATEGORY = TCT.CRIME_CATEGORY
WHEN NOT MATCHED THEN INSERT (MODALITY,CATEGORY) 
VALUES (TCT.CRIME_MODALITY,TCT.CRIME_CATEGORY);  

CREATE OR REPLACE TASK CONSUMPTION.UPDATE_DATE_DIMENSION
    WAREHOUSE = 'COMPUTE_WH'
AFTER CONSUMPTION.CREATE_TEMPORARY_TABLE
AS MERGE INTO CONSUMPTION.DATE_DIMENSION AS CDD
    USING (
        SELECT DISTINCT 
            concat(
                year(CRIME_DATE),
                CASE 
                    WHEN length(month(CRIME_DATE)) = 1 THEN concat('0',month(CRIME_DATE))
                    ELSE to_varchar(month(CRIME_DATE))
                END,
                CASE 
                    WHEN length(day(CRIME_DATE)) = 1 THEN concat('0',day(CRIME_DATE))
                    ELSE to_varchar(day(CRIME_DATE))
                END
            ) AS DATE_ID,
            CRIME_DATE AS DATE,
            dayofweek(CRIME_DATE) AS DAY_WEEK,
            month(CRIME_DATE) AS MONTH,
            CASE MONTH
                WHEN 1 THEN 'ENERO'
                WHEN 2 THEN 'FEBRERO'
                WHEN 3 THEN 'MARZO'
                WHEN 4 THEN 'ABRIL'
                WHEN 5 THEN 'MAYO'
                WHEN 6 THEN 'JUNIO'
                WHEN 7 THEN 'JULIO'
                WHEN 8 THEN 'AGOSTO'
                WHEN 9 THEN 'SEPTIEMBRE'
                WHEN 10 THEN 'OCTUBRE'
                WHEN 11 THEN 'NOVIEMBRE'
                WHEN 12 THEN 'DICIEMBRE'
            END AS MONTH_NAME,
            year(CRIME_DATE) AS YEAR,
            quarter(CRIME_DATE) AS TRIMESTER,
            CASE
                WHEN MONTH >= 1 AND MONTH <= 4  THEN 1
                WHEN MONTH >= 5 AND MONTH <= 8  THEN 2
                WHEN MONTH >= 9 AND MONTH <= 12  THEN 3
            END AS QUARTER,
            CASE
                WHEN MONTH >= 1 AND MONTH <= 6  THEN 1
                WHEN MONTH >= 6 AND MONTH <= 12  THEN 2    
            END AS SEMESTER
        FROM TRANSFORMED.CRIMES_TEMPORARY
    ) AS TCT
    ON CDD.DATE_ID = TCT.DATE_ID
WHEN NOT MATCHED THEN INSERT (DATE_ID,DATE,DAY_WEEK,MONTH,MONTH_NAME,YEAR,TRIMESTER,QUARTER,SEMESTER) 
VALUES (TCT.DATE_ID,TCT.DATE,TCT.DAY_WEEK,TCT.MONTH,TCT.MONTH_NAME,TCT.YEAR,TCT.TRIMESTER,TCT.QUARTER,TCT.SEMESTER);

CREATE OR REPLACE TASK CONSUMPTION.UPDATE_TARGET_DIMENSION
    WAREHOUSE = 'COMPUTE_WH'
AFTER CONSUMPTION.CREATE_TEMPORARY_TABLE
AS MERGE INTO CONSUMPTION.TARGET_DIMENSION AS CTD
    USING (
        SELECT DISTINCT TARGET_TYPE, TARGET_DESCRIPTION 
        FROM TRANSFORMED.CRIMES_TEMPORARY
        ORDER BY TARGET_TYPE, TARGET_DESCRIPTION
    ) AS TCT
    ON CTD.TARGET_TYPE = TCT.TARGET_TYPE
    AND CTD.TARGET_DESCRIPTION = TCT.TARGET_DESCRIPTION
WHEN NOT MATCHED THEN INSERT (TARGET_TYPE, TARGET_DESCRIPTION)
VALUES (TCT.TARGET_TYPE, TCT.TARGET_DESCRIPTION);

CREATE OR REPLACE TASK CONSUMPTION.UPDATE_VICTIM_DEMOGRAPHICS_DIMENSION
    WAREHOUSE = 'COMPUTE_WH'
AFTER CONSUMPTION.CREATE_TEMPORARY_TABLE
AS MERGE INTO CONSUMPTION.VICTIM_DEMOGRAPHICS_DIMENSION AS CVDD
    USING (
        SELECT DISTINCT VICTIM_AGE_CATEGORY, VICTIM_NATIONALITY 
        FROM TRANSFORMED.CRIMES_TEMPORARY
        ORDER BY VICTIM_AGE_CATEGORY, VICTIM_NATIONALITY
    ) AS TCT
    ON CVDD.AGE_CATEGORY = TCT.VICTIM_AGE_CATEGORY
    AND CVDD.NATIONALITY = TCT.VICTIM_NATIONALITY
WHEN NOT MATCHED THEN INSERT (AGE_CATEGORY,NATIONALITY)
VALUES (TCT.VICTIM_AGE_CATEGORY,TCT.VICTIM_NATIONALITY);

CREATE OR REPLACE TASK CONSUMPTION.UPDATE_GEOGRAPHICS_DIMENSION
    WAREHOUSE = 'COMPUTE_WH'
AFTER CONSUMPTION.CREATE_TEMPORARY_TABLE
AS MERGE INTO CONSUMPTION.GEOGRAPHICS_DIMENSION AS CGD
    USING (
        SELECT DISTINCT CRIME_DISTRICT, CRIME_CANTON, CRIME_PROVINCE 
        FROM TRANSFORMED.CRIMES_TEMPORARY
        ORDER BY CRIME_PROVINCE, CRIME_CANTON, CRIME_DISTRICT
    ) AS TCT
    ON CGD.DISTRICT = TCT.CRIME_DISTRICT
    AND CGD.CANTON = TCT.CRIME_CANTON
    AND CGD.PROVINCE = TCT.CRIME_PROVINCE
WHEN NOT MATCHED THEN INSERT (DISTRICT,CANTON,PROVINCE)
VALUES (TCT.CRIME_DISTRICT,TCT.CRIME_CANTON,TCT.CRIME_PROVINCE);

CREATE OR REPLACE TASK CONSUMPTION.UPDATE_CRIMES
    WAREHOUSE = 'COMPUTE_WH'
AFTER 
    CONSUMPTION.UPDATE_MODALITY_DIMENSION,
    CONSUMPTION.UPDATE_DATE_DIMENSION,
    CONSUMPTION.UPDATE_TARGET_DIMENSION,
    CONSUMPTION.UPDATE_VICTIM_DEMOGRAPHICS_DIMENSION,
    CONSUMPTION.UPDATE_GEOGRAPHICS_DIMENSION
AS INSERT INTO CONSUMPTION.CRIMES (MODALITY_ID, DATE_ID, TARGET_ID, DEMOGRAPHICS_ID, GEOGRAPHICS_ID) 
SELECT MODALITY_ID, DATE_ID, TARGET_ID, DEMOGRAPHICS_ID, GEOGRAPHICS_ID
FROM TRANSFORMED.CRIMES_TEMPORARY TCT
INNER JOIN CONSUMPTION.MODALITY_DIMENSION CMD
    ON TCT.CRIME_CATEGORY = CMD.CATEGORY 
    AND TCT.CRIME_MODALITY = CMD.MODALITY
INNER JOIN CONSUMPTION.DATE_DIMENSION CDD
    ON TCT.CRIME_DATE = CDD.DATE
INNER JOIN CONSUMPTION.TARGET_DIMENSION CTD
    ON TCT.TARGET_TYPE = CTD.TARGET_TYPE 
    AND TCT.TARGET_DESCRIPTION = CTD.TARGET_DESCRIPTION
INNER JOIN CONSUMPTION.VICTIM_DEMOGRAPHICS_DIMENSION CVDD
    ON TCT.VICTIM_AGE_CATEGORY = CVDD.AGE_CATEGORY 
    AND TCT.VICTIM_NATIONALITY = CVDD.NATIONALITY
INNER JOIN CONSUMPTION.GEOGRAPHICS_DIMENSION CGD
    ON TCT.CRIME_PROVINCE = CGD.PROVINCE 
    AND TCT.CRIME_CANTON = CGD.CANTON 
    AND TCT.CRIME_DISTRICT = CGD.DISTRICT;

CREATE OR REPLACE TASK CONSUMPTION.DROP_TEMPORARY_TABLE
    WAREHOUSE = 'COMPUTE_WH'
AFTER CONSUMPTION.UPDATE_CRIMES
AS DROP TABLE CRIMES_DC23.TRANSFORMED.CRIMES_TEMPORARY;

-- ALTER TASK CONSUMPTION.CREATE_TEMPORARY_TABLE RESUME;
-- ALTER TASK CONSUMPTION.CREATE_TEMPORARY_TABLE SUSPEND;

SELECT SYSTEM$TASK_DEPENDENTS_ENABLE('CONSUMPTION.CREATE_TEMPORARY_TABLE');